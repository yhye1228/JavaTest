//http://www.verthasys.co.kr/coding/에 올리기
//crud도 객체화 하기


import java.util.List;
import java.util.ArrayList;
import java.util.Scanner;

class Address{
    private int addr_id;
    private String name;
    private String hp;

    public int getAddr_Id() {
        return addr_id;
    }

    public void setAddr_Id(int addr_id) {
        this.addr_id = addr_id;
    }

    public String getHp() {
        return hp;
    }

    public void setHp(String hp) {
        this.hp = hp;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
    //공통요소 : 1. 입력, 수정에서 입력받기&(중복확인:idDup check)
    public int idDupCheck(int id, List<Address> list){
        //result > 0이면 중복이므로 break
        int result = 0;
        for(int i = 0; i < list.size(); i++){
            Address ad = list.get(i);
            if(ad.getAddr_Id() == id){
                result++;
            }
        }
        return result;
    }
    //2. 삭제, 수정에서 id입력 받기(존재유무 확인:idExist check)
    public int idExistCheck(int id, List<Address> list){
        //result = 0이면 존재하지 않으므로 break
        int result = 0;
        for(int i = 0; i < list.size(); i++){
            Address ad = list.get(i);
            if(ad.getAddr_Id() == id){
                result++;
            }
        }
        return result;
    }
    public static class insert{

    }
    public static class delete{

    }
    public static class edit{

    }
    public static class search{

    }
}
public class Main {
    public static void main(String[] args) {
        List<Address> list = new ArrayList<Address>();
        Scanner sc = new Scanner(System.in);
        int index = 0;

        //무한반복(while)
        while(true){
            for(int i=0; i <= 30; i++){
                System.out.print("-");
            }
            System.out.println();
            System.out.println("1. 데이터 삽입");
            System.out.println("2. 데이터 삭제");
            System.out.println("3. 데이터 조회");
            System.out.println("4. 데이터 수정\n");

            System.out.print("메뉴 : ");

            int num = sc.nextInt();
            switch(num){
                case 1:
                    //입력
                    Address addr = new Address();
                    int addr_id;
                    String name, hp;
                    System.out.print("ID를 입력해주세요 : ");
                    addr_id = sc.nextInt();
                    sc.nextLine();  //개행문자 제거용
                    //id중복 확인
                    //idDupCheck(1이면 끝내기)
                    addr.setAddr_Id(addr_id);
                    System.out.print("이름을 입력해주세요 : ");
                    name = sc.nextLine();
                    addr.setName(name);
                    System.out.print("전화번호를 입력해주세요 : (예시:010-1111-1111)");
                    hp = sc.nextLine();
                    addr.setHp(hp);
                    list.add(addr);
                    //저장확인
                    System.out.println("===== 입력된 정보 =====");
                    System.out.println("ID: " + addr.getAddr_Id());
                    System.out.println("이름: " + addr.getName());
                    System.out.println("전화번호: " + addr.getHp());

                    //System.out.println("1");
                    break;
                case 2:
                    //삭제
                    System.out.print("삭제할 ADDR_ID를 입력해주세요 : ");
                    //리스트 내부에 있는지 확인
                    //idExistCheck(0이면 끝내기)
                    int dId = sc.nextInt();
                    for(int i = 0; i < list.size(); i++){
                        Address ad = list.get(i);
                        if(ad.getAddr_Id() == dId){
                            index = i;
                        }
                    }

                    list.remove(index);
                    break;
                case 3:
                    //조회
                    System.out.print("ADDR_ID\t ");
                    System.out.print("NAME\t\t");
                    System.out.print("HP\t\n");
                    for(Address ad : list ){
                        System.out.print(ad.getAddr_Id() + "\t\t");
                        System.out.print(ad.getName() + "\t");
                        System.out.print(ad.getHp() + "\t\n");
                    }
                    System.out.println();
                    //System.out.println("3");
                    break;
                case 4:
                    //데이터 수정
                    System.out.print("원하는 데이터의 ADDR_ID를 입력해주세요 : ");

                    int eId = sc.nextInt();
                    //리스트 내부에 있는지 확인하기
                    //idExistCheck(0이면 끝내기)
                    String dName = "";
                    String dHp = "";
                    for(int i = 0; i < list.size(); i++){
                        Address ad = list.get(i);
                        if(ad.getAddr_Id() == eId){
                            dName = ad.getName();
                            dHp = ad.getHp();
                            index = i;
                        }
                    }
                    //삭제 후 입력
                    list.remove(index);
                    Address eAddr = new Address();
                    //id입력받기
                    System.out.print("ID를 입력해주세요 : ");
                    addr_id = sc.nextInt();
                    eAddr.setAddr_Id(addr_id);
                    sc.nextLine();  //개행문자 제거용
                    //id중복 확인
                    //idDupCheck(1이면 끝내기)
                    if(idDupCheck() > 0) break;
                    System.out.print("이름을 입력해주세요 : ");
                    name = sc.nextLine();
                    eAddr.setName(name);
                    System.out.print("전화번호를 입력해주세요 : (예시:010-1111-1111)");
                    hp = sc.nextLine();
                    eAddr.setHp(hp);
                    list.add(eAddr);
                    break;
                default:
                    System.out.println("1~4사이의 숫자만 입력해주세요.");
            }

        }//end while


    }
}
